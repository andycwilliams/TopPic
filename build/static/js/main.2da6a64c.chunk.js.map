{"version":3,"sources":["components/Login.js","utils/refreshToken.js","App.js","reportWebVitals.js","index.js"],"names":["Login","className","clientId","buttonText","onSuccess","res","console","log","profileObj","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","id_token","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","style","marginTop","isSignedIn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAiCeA,MA1Bf,WAWA,OACI,qBAAKC,UAAU,4CAAf,SACI,cAAC,cAAD,CACAC,SAhBS,2EAiBTC,WAAW,QACXC,UAfc,SAACC,GACfC,QAAQC,IAAI,+BAAgCF,EAAIG,YCTvB,SAACH,GAE9B,IAAII,EAA6D,KAA5CJ,EAAIK,SAASC,YAAc,MAE1CC,EAAY,uCAAG,4BAAAC,EAAA,sEACQR,EAAIS,qBADZ,OACXC,EADW,OAEjBN,EAA2D,KAA1CM,EAAWJ,YAAc,MAC1CL,QAAQC,IAAI,cAAeQ,GAC3BT,QAAQC,IAAI,iBAAkBQ,EAAWC,UACzCC,WAAWL,EAAcH,GALR,2CAAH,qDAOlBQ,WAAWL,EAAcH,GDArBS,CAAkBb,IAalBc,UAVc,SAACd,GACfC,QAAQC,IAAI,sBAAuBF,IAUnCe,aAAc,oBACdC,MAAO,CAAEC,UAAW,SACpBC,YAAY,OEJLC,MAhBf,WACE,OACE,sBAAKvB,UAAU,qGAAf,UACE,sBAAKA,UAAU,kFAAf,UACE,mBAAGA,UAAU,gBAAb,qBACA,4DAEF,qBAAKA,UAAU,yEAAf,SACE,qBAAKA,UAAU,yCAAf,SACE,cAAC,EAAD,YCJKwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2da6a64c.chunk.js","sourcesContent":["import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\n//token\nimport { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId = '466243221982-l2hjhe4g7dcuq3h5ute68de36osa92su.apps.googleusercontent.com';\n\nfunction Login() {\n    const onSuccess = (res) => {\n        console.log('[Login Success] currentUser:', res.profileObj);\n        //token\n        refreshTokenSetup(res);\n    };\n\n    const onFailure = (res) => {\n        console.log('[Login failed] res:', res);\n    };\n\nreturn (\n    <div className='flex flex-col justify-center items-center'>\n        <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_orgin'}\n        style={{ marginTop: '100px' }}\n        isSignedIn={true}\n        />\n    </div>\n);\n}\n\nexport default Login;","export const refreshTokenSetup = (res) => {\n\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n    const refreshToken = async () => {\n        const newAuthRes = await res.reloadAuthResponse();\n        refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n        console.log('newAuthRes:', newAuthRes);\n        console.log('new auth Token', newAuthRes.id_token);\n        setTimeout(refreshToken, refreshTiming);\n    };\n    setTimeout(refreshToken, refreshTiming);\n};","import { render } from \"@testing-library/react\";\nimport \"./App.css\";\n// import ImageUpload from \"./components/ImageUpload/\";\nimport React, { useEffect } from \"react\";\nimport Login from \"./components/Login\";\n// import Logout from \"./components/LogOut\";\n\nfunction App() {\n  return (\n    <div className='flex flex-col justify-center items-center w-screen h-screen bg-photo-collage bg-no-repeat bg-cover'>\n      <div className='flex flex-col justify-center items-center w-2/4 h-2/6 bg-gray-200 bg-opacity-90'>\n        <p className='text-5xl my-3'>Top Pic</p>\n        <p>Your Inspiration Station</p>\n      </div>\n      <div className='flex justify-center items-center w-2/4 h-1/6 bg-gray-200 bg-opacity-90'>\n        <div className='flex justify-center items-center w-2/4'>\n          <Login />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}